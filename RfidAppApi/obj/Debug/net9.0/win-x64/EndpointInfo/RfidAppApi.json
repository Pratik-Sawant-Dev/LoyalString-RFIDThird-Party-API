{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "RFID Jewelry Inventory System API",
    "description": "Multi-tenant RFID Jewelry Inventory Management System API",
    "version": "v1"
  },
  "paths": {
    "/api/Admin/register-admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Register a new admin user (Main Admin only)",
        "operationId": "Admin_RegisterAdmin",
        "requestBody": {
          "x-name": "createUserDto",
          "description": "Admin user creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserByAdminDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Created admin user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Admin/register-sub-user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Register a new sub-user under admin",
        "operationId": "Admin_RegisterSubUser",
        "requestBody": {
          "x-name": "createUserDto",
          "description": "Sub-user creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserByAdminDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Created sub-user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Admin/users/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user by ID",
        "operationId": "Admin_GetUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update user information (Admin only)",
        "operationId": "Admin_UpdateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateUserDto",
          "description": "Update information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserByAdminDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Updated user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete user (Admin only)",
        "operationId": "Admin_DeleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success status"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/users-under-admin": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all users managed by the current admin",
        "operationId": "Admin_GetUsersUnderAdmin",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "x-position": 2
          },
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/activate-user": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Activate user (Admin only)",
        "operationId": "Admin_ActivateUser",
        "requestBody": {
          "x-name": "activateUserDto",
          "description": "Activation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/deactivate-user": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Deactivate user (Admin only)",
        "operationId": "Admin_DeactivateUser",
        "requestBody": {
          "x-name": "deactivateUserDto",
          "description": "Deactivation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/users/{userId}/reset-password": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Reset user password (Admin only)",
        "operationId": "Admin_ResetUserPassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "resetPasswordDto",
          "description": "New password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/assign-permissions": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Assign permissions to user",
        "operationId": "Admin_AssignPermissions",
        "requestBody": {
          "x-name": "assignPermissionsDto",
          "description": "Permission assignment details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPermissionsDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/update-permissions": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update user permissions (Admin only)",
        "operationId": "Admin_UpdatePermissions",
        "requestBody": {
          "x-name": "updatePermissionsDto",
          "description": "Permission update details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionsDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-permissions/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user permissions",
        "operationId": "Admin_GetUserPermissions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/all-user-permissions": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all user permissions",
        "operationId": "Admin_GetAllUserPermissions",
        "responses": {
          "200": {
            "description": "All user permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/users/{userId}/permissions": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update user permissions (Admin only)",
        "operationId": "Admin_UpdateUserPermissions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "permissions",
          "description": "New permissions",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserPermissionCreateDto"
                }
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/permissions/bulk-update": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Bulk update permissions for multiple users (Admin only)",
        "operationId": "Admin_BulkUpdatePermissions",
        "requestBody": {
          "x-name": "bulkUpdate",
          "description": "Bulk permission update details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkPermissionUpdateDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-activities": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user activities with filters",
        "operationId": "Admin_GetUserActivities",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "activityType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "action",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 6
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            },
            "x-position": 7
          }
        ],
        "responses": {
          "200": {
            "description": "List of user activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-activities/user/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get activities for a specific user",
        "operationId": "Admin_GetUserActivitiesByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of user activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-activities/date-range": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user activities by date range",
        "operationId": "Admin_GetUserActivitiesByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "List of user activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-activities/module/{module}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user activities by module",
        "operationId": "Admin_GetUserActivitiesByModule",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "description": "Module name",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of user activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-activities/action/{action}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user activities by action",
        "operationId": "Admin_GetUserActivitiesByAction",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "required": true,
            "description": "Action name",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of user activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/users/{userId}/activities": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get activities for a specific user",
        "operationId": "Admin_GetUserActivities2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ActivityType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Action",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 7
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "List of user activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/activity-summary": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get activity summary",
        "operationId": "Admin_GetActivitySummary",
        "responses": {
          "200": {
            "description": "Activity summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySummaryDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/activity-summary/date-range": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get activity summary by date range",
        "operationId": "Admin_GetActivitySummaryByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Activity summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySummaryDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/activity-summary/user/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get activity summary by user",
        "operationId": "Admin_GetActivitySummaryByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Activity summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySummaryDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/activity-summary/module/{module}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get activity summary by module",
        "operationId": "Admin_GetActivitySummaryByModule",
        "parameters": [
          {
            "name": "module",
            "in": "path",
            "required": true,
            "description": "Module name",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Activity summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySummaryDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-hierarchy": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user hierarchy",
        "operationId": "Admin_GetUserHierarchy",
        "responses": {
          "200": {
            "description": "User hierarchy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHierarchyDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/user-hierarchy/admin/{adminUserId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user hierarchy by admin",
        "operationId": "Admin_GetUserHierarchyByAdmin",
        "parameters": [
          {
            "name": "adminUserId",
            "in": "path",
            "required": true,
            "description": "Admin user ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User hierarchy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHierarchyDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/export-activities/csv": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Export user activities to CSV",
        "operationId": "Admin_ExportActivitiesToCsv",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User ID (optional)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "module",
            "in": "query",
            "description": "Module (optional)",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "CSV file"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/export-permissions/csv": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Export user permissions to CSV",
        "operationId": "Admin_ExportPermissionsToCsv",
        "responses": {
          "200": {
            "description": "CSV file"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/dashboard": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get admin dashboard with statistics and recent activities",
        "operationId": "Admin_GetDashboard",
        "responses": {
          "200": {
            "description": "Admin dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDashboardDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/organization/dashboard": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get organization dashboard (Main Admin only)",
        "operationId": "Admin_GetOrganizationDashboard",
        "responses": {
          "200": {
            "description": "Organization dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDashboardDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/organization/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all users in organization (Main Admin only)",
        "operationId": "Admin_GetOrganizationUsers",
        "responses": {
          "200": {
            "description": "List of all users in organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/health": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Get database health status for all clients",
        "operationId": "DatabaseMigration_GetDatabaseHealth",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/health/{clientCode}": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Get database health status for a specific client",
        "operationId": "DatabaseMigration_GetClientDatabaseHealth",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/migrate/{clientCode}": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Migrate a specific client database",
        "operationId": "DatabaseMigration_MigrateClientDatabase",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/migrate-all": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Migrate all client databases",
        "operationId": "DatabaseMigration_MigrateAllClientDatabases",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/repair/{clientCode}": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Force repair a specific client database",
        "operationId": "DatabaseMigration_RepairClientDatabase",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/statistics": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Get migration statistics",
        "operationId": "DatabaseMigration_GetMigrationStatistics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/emergency-repair-all": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Emergency database repair for all clients",
        "operationId": "DatabaseMigration_EmergencyRepairAllDatabases",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/test-tables/{clientCode}": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Test endpoint to verify table creation for a specific client",
        "operationId": "DatabaseMigration_TestTableCreation",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/force-create-tables/{clientCode}": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Force create missing tables for a specific client",
        "operationId": "DatabaseMigration_ForceCreateMissingTables",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "Error"
        ],
        "operationId": "Error_Error",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create a new invoice",
        "operationId": "Invoice_CreateInvoice",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get all invoices with pagination and filtering",
        "operationId": "Invoice_GetAllInvoices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            },
            "x-position": 2
          },
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "invoiceType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "minAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "maxAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "CreatedOn",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "desc",
              "nullable": true
            },
            "x-position": 11
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInvoiceResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/{invoiceId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by ID",
        "operationId": "Invoice_GetInvoiceById",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update an existing invoice",
        "operationId": "Invoice_UpdateInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete an invoice (soft delete)",
        "operationId": "Invoice_DeleteInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-date-range": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by date range",
        "operationId": "Invoice_GetInvoicesByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-product/{productId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by product ID",
        "operationId": "Invoice_GetInvoicesByProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-customer": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by customer name (partial match)",
        "operationId": "Invoice_GetInvoicesByCustomer",
        "parameters": [
          {
            "name": "customerName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-payment-method": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by payment method",
        "operationId": "Invoice_GetInvoicesByPaymentMethod",
        "parameters": [
          {
            "name": "paymentMethod",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/statistics": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get comprehensive invoice statistics",
        "operationId": "Invoice_GetInvoiceStatistics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceStatisticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/revenue-analytics": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get revenue analytics by date range",
        "operationId": "Invoice_GetRevenueAnalytics",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "groupBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "day",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueAnalyticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/top-products": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get top performing products by revenue",
        "operationId": "Invoice_GetTopProducts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "x-position": 1
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopProductDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/bulk": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create multiple invoices in bulk",
        "operationId": "Invoice_CreateBulkInvoices",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateInvoiceDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkInvoiceResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/export/csv": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Export invoices to CSV format",
        "operationId": "Invoice_ExportInvoicesToCsv",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "invoiceType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/categories": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all categories",
        "operationId": "MasterData_GetAllCategories",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new category",
        "operationId": "MasterData_CreateCategory",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update category",
        "operationId": "MasterData_UpdateCategory",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/categories/{categoryId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get category by ID",
        "operationId": "MasterData_GetCategoryById",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete category",
        "operationId": "MasterData_DeleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/purities": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all purities",
        "operationId": "MasterData_GetAllPurities",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new purity",
        "operationId": "MasterData_CreatePurity",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurityMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update purity",
        "operationId": "MasterData_UpdatePurity",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurityMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/purities/{purityId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get purity by ID",
        "operationId": "MasterData_GetPurityById",
        "parameters": [
          {
            "name": "purityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete purity",
        "operationId": "MasterData_DeletePurity",
        "parameters": [
          {
            "name": "purityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/designs": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all designs",
        "operationId": "MasterData_GetAllDesigns",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new design",
        "operationId": "MasterData_CreateDesign",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDesignMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update design",
        "operationId": "MasterData_UpdateDesign",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/designs/{designId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get design by ID",
        "operationId": "MasterData_GetDesignById",
        "parameters": [
          {
            "name": "designId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete design",
        "operationId": "MasterData_DeleteDesign",
        "parameters": [
          {
            "name": "designId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/boxes": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all boxes",
        "operationId": "MasterData_GetAllBoxes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new box",
        "operationId": "MasterData_CreateBox",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update box",
        "operationId": "MasterData_UpdateBox",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoxMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/boxes/active": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get active boxes only",
        "operationId": "MasterData_GetActiveBoxes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/boxes/type/{boxType}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get boxes by type",
        "operationId": "MasterData_GetBoxesByType",
        "parameters": [
          {
            "name": "boxType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/boxes/{boxId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get box by ID",
        "operationId": "MasterData_GetBoxById",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete box",
        "operationId": "MasterData_DeleteBox",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/counters": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all counters",
        "operationId": "MasterData_GetAllCounters",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new counter",
        "operationId": "MasterData_CreateCounter",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCounterMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update counter",
        "operationId": "MasterData_UpdateCounter",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCounterMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/counters/client/{clientCode}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get counters by client",
        "operationId": "MasterData_GetCountersByClient",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/counters/branch/{branchId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get counters by branch",
        "operationId": "MasterData_GetCountersByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/counters/{counterId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get counter by ID",
        "operationId": "MasterData_GetCounterById",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete counter",
        "operationId": "MasterData_DeleteCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/branches": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all branches",
        "operationId": "MasterData_GetAllBranches",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new branch",
        "operationId": "MasterData_CreateBranch",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update branch",
        "operationId": "MasterData_UpdateBranch",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/branches/client/{clientCode}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get branches by client",
        "operationId": "MasterData_GetBranchesByClient",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/branches/{branchId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get branch by ID",
        "operationId": "MasterData_GetBranchById",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete branch",
        "operationId": "MasterData_DeleteBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/products": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get all products",
        "operationId": "MasterData_GetAllProducts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterData"
        ],
        "summary": "Create new product",
        "operationId": "MasterData_CreateProduct",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Update product",
        "operationId": "MasterData_UpdateProduct",
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductMasterDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/products/{productId}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get product by ID",
        "operationId": "MasterData_GetProductById",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterData"
        ],
        "summary": "Delete product",
        "operationId": "MasterData_DeleteProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/summary": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get master data summary",
        "operationId": "MasterData_GetMasterDataSummary",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/counts": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get master data counts",
        "operationId": "MasterData_GetMasterDataCounts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterData/summary/client/{clientCode}": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get master data summary by client",
        "operationId": "MasterData_GetMasterDataSummaryByClient",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/create": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product with user-friendly inputs\nUsers can simply enter text values like \"Gold\", \"Pune\", \"Counter1\" instead of knowing IDs",
        "operationId": "Product_CreateProduct",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFriendlyCreateProductDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/bulk-create": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create multiple products in bulk with user-friendly inputs",
        "operationId": "Product_CreateBulkProducts",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateProductsDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/create-with-images": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product with images",
        "operationId": "Product_CreateProductWithImages",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "Images": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/components/schemas/ProductImageUploadDto"
                    }
                  },
                  "ItemCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "CategoryName": {
                    "type": "string",
                    "nullable": true
                  },
                  "BranchName": {
                    "type": "string",
                    "nullable": true
                  },
                  "CounterName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProductName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DesignName": {
                    "type": "string",
                    "nullable": true
                  },
                  "PurityName": {
                    "type": "string",
                    "nullable": true
                  },
                  "RfidCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "RFIDNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "GrossWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "StoneWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "DiamondHeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "NetWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "BoxDetails": {
                    "type": "string",
                    "nullable": true
                  },
                  "Size": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "StoneAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DiamondAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "HallmarkAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPerGram": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPercentage": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingFixedAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "Mrp": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "ImageUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "Status": {
                    "type": "string",
                    "nullable": true
                  },
                  "images": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a product by ID with user-friendly response",
        "operationId": "Product_GetProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product with user-friendly inputs\nUsers can update master data using text values instead of IDs",
        "operationId": "Product_UpdateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFriendlyUpdateProductDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product by ID",
        "operationId": "Product_DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/all": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products with user-friendly response",
        "operationId": "Product_GetAllProducts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}/with-images": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product with images",
        "operationId": "Product_UpdateProductWithImages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ImagesToAdd": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/components/schemas/ProductImageUploadDto"
                    }
                  },
                  "ImageIdsToRemove": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "CategoryName": {
                    "type": "string",
                    "nullable": true
                  },
                  "BranchName": {
                    "type": "string",
                    "nullable": true
                  },
                  "CounterName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProductName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DesignName": {
                    "type": "string",
                    "nullable": true
                  },
                  "PurityName": {
                    "type": "string",
                    "nullable": true
                  },
                  "BoxDetails": {
                    "type": "string",
                    "nullable": true
                  },
                  "RfidCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "GrossWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "StoneWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "DiamondHeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "NetWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "Size": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "StoneAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DiamondAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "HallmarkAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPerGram": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPercentage": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingFixedAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "Mrp": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "ImageUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "Status": {
                    "type": "string",
                    "nullable": true
                  },
                  "newImages": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/search": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Search products by various criteria",
        "operationId": "Product_SearchProducts",
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "branchName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "counterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "productName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "designName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "purityName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "minPrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "maxPrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/stats": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product statistics",
        "operationId": "Product_GetProductStats",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/image/{filePath}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Serve product image by file path",
        "operationId": "Product_GetProductImage",
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/upload": {
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Upload a single image for a product",
        "operationId": "ProductImage_UploadImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "array",
                    "nullable": true,
                    "items": {}
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProductId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ImageType": {
                    "type": "string",
                    "nullable": true
                  },
                  "DisplayOrder": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/upload-multiple": {
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Upload multiple images for products",
        "operationId": "ProductImage_UploadMultipleImages",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "files": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "uploadDtosJson": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/{id}": {
      "get": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Get a specific image by ID",
        "operationId": "ProductImage_GetImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Update image metadata",
        "operationId": "ProductImage_UpdateImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageUpdateDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Delete a specific image",
        "operationId": "ProductImage_DeleteImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/product/{productId}": {
      "get": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Get all images for a specific product",
        "operationId": "ProductImage_GetProductImages",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Delete all images for a specific product",
        "operationId": "ProductImage_DeleteProductImages",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/bulk-update": {
      "put": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Bulk update images",
        "operationId": "ProductImage_BulkUpdateImages",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkImageOperationDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/bulk-delete": {
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Bulk delete images",
        "operationId": "ProductImage_BulkDeleteImages",
        "requestBody": {
          "x-name": "imageIds",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/validate": {
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Validate image file",
        "operationId": "ProductImage_ValidateImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "array",
                    "nullable": true,
                    "items": {}
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-movements": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Create a new stock movement",
        "operationId": "Reporting_CreateStockMovement",
        "requestBody": {
          "x-name": "movementDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockMovementDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock movements with filters",
        "operationId": "Reporting_GetStockMovements",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockMovementDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-movements/bulk": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Create multiple stock movements in bulk",
        "operationId": "Reporting_CreateBulkStockMovements",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkStockMovementDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockMovementDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-movements/{movementId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock movement by ID",
        "operationId": "Reporting_GetStockMovementById",
        "parameters": [
          {
            "name": "movementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances/{productId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily stock balance for a specific product and date",
        "operationId": "Reporting_GetDailyStockBalance",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyStockBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily stock balances with filters",
        "operationId": "Reporting_GetDailyStockBalances",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyStockBalanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances/calculate/{productId}/{date}": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Calculate daily stock balance for a specific product and date",
        "operationId": "Reporting_CalculateDailyStockBalance",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyStockBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances/calculate/{date}": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Calculate daily stock balances for all products on a specific date",
        "operationId": "Reporting_CalculateDailyStockBalances",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyStockBalanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report with filters",
        "operationId": "Reporting_GetSalesReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific date",
        "operationId": "Reporting_GetSalesReportByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/range": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a date range",
        "operationId": "Reporting_GetSalesReportByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific branch on a date",
        "operationId": "Reporting_GetSalesReportByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific counter on a date",
        "operationId": "Reporting_GetSalesReportByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/category/{categoryId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific category on a date",
        "operationId": "Reporting_GetSalesReportByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary report with filters",
        "operationId": "Reporting_GetStockSummaryReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockSummaryReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific date",
        "operationId": "Reporting_GetStockSummaryByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific branch on a date",
        "operationId": "Reporting_GetStockSummaryByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific counter on a date",
        "operationId": "Reporting_GetStockSummaryByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/category/{categoryId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific category on a date",
        "operationId": "Reporting_GetStockSummaryByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity report with filters",
        "operationId": "Reporting_GetDailyActivityReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyActivityReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific date",
        "operationId": "Reporting_GetDailyActivityByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific branch on a date",
        "operationId": "Reporting_GetDailyActivityByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific counter on a date",
        "operationId": "Reporting_GetDailyActivityByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/category/{categoryId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific category on a date",
        "operationId": "Reporting_GetDailyActivityByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a specific date",
        "operationId": "Reporting_GetReportSummary",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/range": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a date range",
        "operationId": "Reporting_GetReportSummaryByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a specific branch on a date",
        "operationId": "Reporting_GetReportSummaryByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a specific counter on a date",
        "operationId": "Reporting_GetReportSummaryByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/{productId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific product",
        "operationId": "Reporting_GetCurrentStock",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/{productId}/branch/{branchId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific product by branch",
        "operationId": "Reporting_GetCurrentStockByBranch",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/{productId}/counter/{counterId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific product by counter",
        "operationId": "Reporting_GetCurrentStockByCounter",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/category/{categoryId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific category",
        "operationId": "Reporting_GetCurrentStockByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/{productId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific product",
        "operationId": "Reporting_GetCurrentStockValue",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/{productId}/branch/{branchId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific product by branch",
        "operationId": "Reporting_GetCurrentStockValueByBranch",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/{productId}/counter/{counterId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific product by counter",
        "operationId": "Reporting_GetCurrentStockValueByCounter",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/category/{categoryId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific category",
        "operationId": "Reporting_GetCurrentStockValueByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/process-balances/{date}": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Process daily stock balances for a specific date",
        "operationId": "Reporting_ProcessDailyStockBalances",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/process-balances/range": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Process daily stock balances for a date range",
        "operationId": "Reporting_ProcessAllDailyStockBalances",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/recalculate-balances": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Recalculate stock balances for a date range",
        "operationId": "Reporting_RecalculateStockBalances",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get comprehensive RFID usage report",
        "operationId": "Reporting_GetRfidUsageReport",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage report for a specific date",
        "operationId": "Reporting_GetRfidUsageReportByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/used": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get all used RFID tags",
        "operationId": "Reporting_GetUsedRfidTags",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/unused": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get all unused RFID tags",
        "operationId": "Reporting_GetUnusedRfidTags",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/status/{isUsed}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID tags by usage status",
        "operationId": "Reporting_GetRfidTagsByStatus",
        "parameters": [
          {
            "name": "isUsed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/by-category": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary by category",
        "operationId": "Reporting_GetRfidUsageByCategory",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageByCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/by-branch": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary by branch",
        "operationId": "Reporting_GetRfidUsageByBranch",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageByBranchDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/by-counter": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary by counter",
        "operationId": "Reporting_GetRfidUsageByCounter",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageByCounterDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/category/{categoryId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary for a specific category",
        "operationId": "Reporting_GetRfidUsageByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageByCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/branch/{branchId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary for a specific branch",
        "operationId": "Reporting_GetRfidUsageByBranchId",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageByBranchDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/counter/{counterId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary for a specific counter",
        "operationId": "Reporting_GetRfidUsageByCounterId",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageByCounterDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/count/total": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get total count of RFID tags",
        "operationId": "Reporting_GetTotalRfidTagsCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/count/used": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get count of used RFID tags",
        "operationId": "Reporting_GetUsedRfidTagsCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/count/unused": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get count of unused RFID tags",
        "operationId": "Reporting_GetUnusedRfidTagsCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/percentage": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage percentage",
        "operationId": "Reporting_GetRfidUsagePercentage",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Rfid": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get all RFID tags for the authenticated client",
        "operationId": "Rfid_GetAllRfids",
        "responses": {
          "200": {
            "description": "RFID tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Rfid"
        ],
        "summary": "Create a new RFID tag for the authenticated client",
        "operationId": "Rfid_CreateRfid",
        "requestBody": {
          "x-name": "createRfidDto",
          "description": "RFID tag creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRfidDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "RFID tag created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/{rfidCode}": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get RFID tag by code for the authenticated client",
        "operationId": "Rfid_GetRfidByCode",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID tag code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "RFID tag found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RFID tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Rfid"
        ],
        "summary": "Update an existing RFID tag for the authenticated client",
        "operationId": "Rfid_UpdateRfid",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID tag code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateRfidDto",
          "description": "Updated RFID tag information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRfidDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "RFID tag updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RFID tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Rfid"
        ],
        "summary": "Delete an RFID tag for the authenticated client",
        "operationId": "Rfid_DeleteRfid",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID tag code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "RFID tag deleted successfully"
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RFID tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/available": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get available RFID tags (not assigned to any product) for the authenticated client",
        "operationId": "Rfid_GetAvailableRfids",
        "responses": {
          "200": {
            "description": "Available RFID tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/active": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get active RFID tags for the authenticated client",
        "operationId": "Rfid_GetActiveRfids",
        "responses": {
          "200": {
            "description": "Active RFID tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/count": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get RFID count for the authenticated client",
        "operationId": "Rfid_GetRfidCount",
        "responses": {
          "200": {
            "description": "RFID count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/used-analysis": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get detailed analysis of used RFID tags (assigned to products) for the authenticated client",
        "operationId": "Rfid_GetUsedRfidAnalysis",
        "responses": {
          "200": {
            "description": "Used RFID analysis retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsedRfidAnalysisDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/unused-analysis": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get detailed analysis of unused RFID tags (not assigned to products) for the authenticated client",
        "operationId": "Rfid_GetUnusedRfidAnalysis",
        "responses": {
          "200": {
            "description": "Unused RFID analysis retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnusedRfidAnalysisDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/scan": {
      "post": {
        "tags": [
          "Rfid"
        ],
        "summary": "Scan for products by EPC value - returns all products associated with the scanned EPC value(s)",
        "operationId": "Rfid_ScanProductsByEpcValue",
        "requestBody": {
          "x-name": "request",
          "description": "Scan request containing single EPC value or multiple EPC values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RfidScanRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Scan completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidScanResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/upload-excel": {
      "post": {
        "tags": [
          "Rfid"
        ],
        "summary": "Upload RFID data from Excel file",
        "operationId": "Rfid_UploadRfidFromExcel",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ExcelFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "ClientCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "UpdateExisting": {
                    "type": "boolean"
                  },
                  "CreateNew": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Excel upload processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidExcelUploadResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/download-template": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Download Excel template for RFID upload",
        "operationId": "Rfid_DownloadExcelTemplate",
        "responses": {
          "200": {
            "description": "Template downloaded successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockTransfer": {
      "post": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Create a new stock transfer",
        "operationId": "StockTransfer_CreateTransfer",
        "requestBody": {
          "x-name": "createDto",
          "description": "Transfer creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockTransferDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Created transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get all transfers with optional filtering",
        "operationId": "StockTransfer_GetTransfers",
        "parameters": [
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "TransferType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "SourceBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SourceCounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "DestinationBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "DestinationCounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 11
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "List of transfers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransferResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/bulk": {
      "post": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Create multiple stock transfers in bulk",
        "operationId": "StockTransfer_CreateBulkTransfers",
        "requestBody": {
          "x-name": "bulkDto",
          "description": "Bulk transfer details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkStockTransferDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Bulk transfer results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/{transferId}": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get a specific transfer by ID",
        "operationId": "StockTransfer_GetTransfer",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "description": "Transfer ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/{transferId}/status": {
      "put": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Update transfer status",
        "operationId": "StockTransfer_UpdateTransferStatus",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "description": "Transfer ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "description": "Status update details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferStatusDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Updated transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/{transferId}/approve": {
      "put": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Approve a transfer",
        "operationId": "StockTransfer_ApproveTransfer",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "description": "Transfer ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "approveDto",
          "description": "Approval details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveTransferDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Approved transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/{transferId}/reject": {
      "put": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Reject a transfer",
        "operationId": "StockTransfer_RejectTransfer",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "description": "Transfer ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "rejectDto",
          "description": "Rejection details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectTransferDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Rejected transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/{transferId}/complete": {
      "put": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Complete a transfer (move product to destination)",
        "operationId": "StockTransfer_CompleteTransfer",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "description": "Transfer ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "completedBy",
            "in": "query",
            "description": "User who completed the transfer",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Completed transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/{transferId}/cancel": {
      "put": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Cancel a transfer",
        "operationId": "StockTransfer_CancelTransfer",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "description": "Transfer ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "cancelledBy",
            "in": "query",
            "description": "User who cancelled the transfer",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled transfer details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTransferResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/summary": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get transfer summary and statistics",
        "operationId": "StockTransfer_GetTransferSummary",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start date for summary",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End date for summary",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/product/{productId}": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get transfers by product",
        "operationId": "StockTransfer_GetTransfersByProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of transfers for the product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransferResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/rfid/{rfidCode}": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get transfers by RFID",
        "operationId": "StockTransfer_GetTransfersByRfid",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of transfers for the RFID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransferResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/pending": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get pending transfers for a specific location",
        "operationId": "StockTransfer_GetPendingTransfersByLocation",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "description": "Branch ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "counterId",
            "in": "query",
            "description": "Counter ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "boxId",
            "in": "query",
            "description": "Box ID (optional)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "List of pending transfers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransferResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/validate": {
      "post": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Validate if a transfer is possible",
        "operationId": "StockTransfer_ValidateTransfer",
        "requestBody": {
          "x-name": "createDto",
          "description": "Transfer creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockTransferDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/history/{productId}": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get transfer history for a product",
        "operationId": "StockTransfer_GetProductTransferHistory",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransferResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/types": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get available transfer types",
        "operationId": "StockTransfer_GetTransferTypes",
        "responses": {
          "200": {
            "description": "List of transfer types",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockTransfer/statuses": {
      "get": {
        "tags": [
          "StockTransfer"
        ],
        "summary": "Get available transfer statuses",
        "operationId": "StockTransfer_GetTransferStatuses",
        "responses": {
          "200": {
            "description": "List of transfer statuses",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/StockVerification/create-session": {
      "post": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Create a new stock verification session",
        "operationId": "StockVerification_CreateStockVerification",
        "requestBody": {
          "x-name": "request",
          "description": "Stock verification session details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockVerificationDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Verification session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or client code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/submit-verification": {
      "post": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Submit scanned items for verification (matched and unmatched)",
        "operationId": "StockVerification_SubmitStockVerification",
        "requestBody": {
          "x-name": "request",
          "description": "Scanned items with verification status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitStockVerificationDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Items submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or verification session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/{verificationId}": {
      "get": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Get stock verification session by ID",
        "operationId": "StockVerification_GetStockVerification",
        "parameters": [
          {
            "name": "verificationId",
            "in": "path",
            "required": true,
            "description": "Verification session ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Verification session retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Verification session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/list": {
      "get": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Get all stock verifications with filters and pagination",
        "operationId": "StockVerification_GetStockVerifications",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "VerifiedBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 8
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "Verifications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationReportResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/summary": {
      "get": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Get stock verification summary",
        "operationId": "StockVerification_GetStockVerificationSummary",
        "responses": {
          "200": {
            "description": "Summary retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/date-wise-report": {
      "get": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Get date-wise stock verification report",
        "operationId": "StockVerification_GetDateWiseStockVerificationReport",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for report",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for report",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DateWiseStockVerificationReportDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found or invalid date range",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/{verificationId}/complete": {
      "post": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Complete a stock verification session",
        "operationId": "StockVerification_CompleteStockVerification",
        "parameters": [
          {
            "name": "verificationId",
            "in": "path",
            "required": true,
            "description": "Verification session ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Verification session completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found or invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/{verificationId}/cancel": {
      "post": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Cancel a stock verification session",
        "operationId": "StockVerification_CancelStockVerification",
        "parameters": [
          {
            "name": "verificationId",
            "in": "path",
            "required": true,
            "description": "Verification session ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Verification session cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found or invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/StockVerification/{verificationId}/details/{status}": {
      "get": {
        "tags": [
          "StockVerification"
        ],
        "summary": "Get verification details by status (matched, unmatched, missing)",
        "operationId": "StockVerification_GetVerificationDetailsByStatus",
        "parameters": [
          {
            "name": "verificationId",
            "in": "path",
            "required": true,
            "description": "Verification session ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "description": "Status filter (Matched, Unmatched, Missing)",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockVerificationDetailDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register a new client organization with automatic database creation",
        "operationId": "User_Register",
        "requestBody": {
          "x-name": "createUserDto",
          "description": "User registration details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authenticate user and get JWT token",
        "operationId": "User_Login",
        "requestBody": {
          "x-name": "loginDto",
          "description": "Login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout user and log the activity",
        "operationId": "User_Logout",
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by ID",
        "operationId": "User_GetUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "operationId": "User_UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateUserDto",
          "description": "Updated user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user (soft delete - sets IsActive to false)",
        "operationId": "User_DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/by-email/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by email address",
        "operationId": "User_GetUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "Email address",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/by-client-code/{clientCode}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by client code",
        "operationId": "User_GetUserByClientCode",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "description": "Client code (e.g., LS0001)",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all active users",
        "operationId": "User_GetAllUsers",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminUserDto": {
        "type": "object",
        "description": "DTO for admin user management",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "organisationName": {
            "type": "string"
          },
          "showroomType": {
            "type": "string",
            "nullable": true
          },
          "clientCode": {
            "type": "string"
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "adminUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userType": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionDto"
            }
          }
        }
      },
      "UserPermissionDto": {
        "type": "object",
        "description": "DTO for user permissions",
        "additionalProperties": false,
        "properties": {
          "userPermissionId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "canView": {
            "type": "boolean"
          },
          "canCreate": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "canDelete": {
            "type": "boolean"
          },
          "canExport": {
            "type": "boolean"
          },
          "canImport": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateUserByAdminDto": {
        "type": "object",
        "description": "DTO for creating a new user by admin",
        "additionalProperties": false,
        "required": [
          "userName",
          "email",
          "password"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 100,
            "minLength": 0
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 6
          },
          "fullName": {
            "type": "string",
            "maxLength": 150,
            "minLength": 0,
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0,
            "nullable": true
          },
          "city": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "address": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "showroomType": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionCreateDto"
            }
          }
        }
      },
      "UserPermissionCreateDto": {
        "type": "object",
        "description": "DTO for creating user permissions",
        "additionalProperties": false,
        "required": [
          "module"
        ],
        "properties": {
          "module": {
            "type": "string",
            "minLength": 1
          },
          "canView": {
            "type": "boolean"
          },
          "canCreate": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "canDelete": {
            "type": "boolean"
          },
          "canExport": {
            "type": "boolean"
          },
          "canImport": {
            "type": "boolean"
          }
        }
      },
      "UpdateUserByAdminDto": {
        "type": "object",
        "description": "DTO for updating user by admin",
        "additionalProperties": false,
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "showroomType": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserPermissionCreateDto"
            }
          }
        }
      },
      "ActivateUserDto": {
        "type": "object",
        "description": "DTO for activating user",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeactivateUserDto": {
        "type": "object",
        "description": "DTO for deactivating user",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResetPasswordDto": {
        "type": "object",
        "description": "DTO for password reset",
        "additionalProperties": false,
        "properties": {
          "newPassword": {
            "type": "string"
          }
        }
      },
      "AssignPermissionsDto": {
        "type": "object",
        "description": "DTO for assigning permissions",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionCreateDto"
            }
          }
        }
      },
      "UpdatePermissionsDto": {
        "type": "object",
        "description": "DTO for updating permissions",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionCreateDto"
            }
          }
        }
      },
      "BulkPermissionUpdateDto": {
        "type": "object",
        "description": "DTO for bulk user permission update",
        "additionalProperties": false,
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermissionCreateDto"
            }
          }
        }
      },
      "UserActivityDto": {
        "type": "object",
        "description": "DTO for user activity tracking",
        "additionalProperties": false,
        "properties": {
          "activityId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "activityType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "recordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "oldValues": {
            "type": "string",
            "nullable": true
          },
          "newValues": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "userName": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          }
        }
      },
      "ActivitySummaryDto": {
        "type": "object",
        "description": "DTO for activity summary",
        "additionalProperties": false,
        "properties": {
          "totalActivities": {
            "type": "integer",
            "format": "int32"
          },
          "activitiesByModule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleActivitySummary"
            }
          },
          "activitiesByUser": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivitySummary"
            }
          },
          "recentActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentActivity"
            }
          }
        }
      },
      "ModuleActivitySummary": {
        "type": "object",
        "description": "DTO for module activity summary",
        "additionalProperties": false,
        "properties": {
          "module": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserActivitySummary": {
        "type": "object",
        "description": "DTO for user activity summary",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecentActivity": {
        "type": "object",
        "description": "DTO for recent activity",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "activityType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserHierarchyDto": {
        "type": "object",
        "description": "DTO for user hierarchy",
        "additionalProperties": false,
        "properties": {
          "adminUserId": {
            "type": "integer",
            "format": "int32"
          },
          "adminUserName": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserHierarchyItem"
            }
          }
        }
      },
      "UserHierarchyItem": {
        "type": "object",
        "description": "DTO for user hierarchy item",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AdminDashboardDto": {
        "type": "object",
        "description": "DTO for admin dashboard statistics",
        "additionalProperties": false,
        "properties": {
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "activeUsers": {
            "type": "integer",
            "format": "int32"
          },
          "totalAdmins": {
            "type": "integer",
            "format": "int32"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalRFIDs": {
            "type": "integer",
            "format": "int32"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "todayActivities": {
            "type": "integer",
            "format": "int32"
          },
          "recentActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserActivityDto"
            }
          },
          "recentUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminUserDto"
            }
          }
        }
      },
      "InvoiceResponseDto": {
        "type": "object",
        "description": "DTO for invoice response",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "decimal"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "finalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceType": {
            "type": "string"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "soldOn": {
            "type": "string",
            "format": "date-time"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateInvoiceDto": {
        "type": "object",
        "description": "DTO for creating invoice",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "decimal"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "finalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceType": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "soldOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInvoiceResponseDto": {
        "type": "object",
        "description": "DTO for paginated invoice response",
        "additionalProperties": false,
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponseDto"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfoDto"
          }
        }
      },
      "PaginationInfoDto": {
        "type": "object",
        "description": "DTO for pagination information",
        "additionalProperties": false,
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          }
        }
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "description": "DTO for updating invoice",
        "additionalProperties": false,
        "properties": {
          "sellingPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "finalAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvoiceStatisticsDto": {
        "type": "object",
        "description": "DTO for invoice statistics",
        "additionalProperties": false,
        "properties": {
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "todayInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "monthInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "yearInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "todayRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "monthRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "yearRevenue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RevenueAnalyticsDto": {
        "type": "object",
        "description": "DTO for revenue analytics",
        "additionalProperties": false,
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "groupBy": {
            "type": "string"
          },
          "totalRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          },
          "revenueByPeriod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevenuePeriodDto"
            }
          }
        }
      },
      "RevenuePeriodDto": {
        "type": "object",
        "description": "DTO for revenue period",
        "additionalProperties": false,
        "properties": {
          "period": {
            "type": "string"
          },
          "revenue": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "TopProductDto": {
        "type": "object",
        "description": "DTO for top performing products",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "totalRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          },
          "lastSoldOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BulkInvoiceResponseDto": {
        "type": "object",
        "description": "DTO for bulk invoice response",
        "additionalProperties": false,
        "properties": {
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "successfullyCreated": {
            "type": "integer",
            "format": "int32"
          },
          "failed": {
            "type": "integer",
            "format": "int32"
          },
          "createdInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponseDto"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BulkCreateInvoiceDto": {
        "type": "object",
        "description": "DTO for bulk invoice creation",
        "additionalProperties": false,
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceDto"
            }
          }
        }
      },
      "CreateCategoryMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "categoryName"
        ],
        "properties": {
          "categoryName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "UpdateCategoryMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "categoryId",
          "categoryName"
        ],
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "CreatePurityMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "purityName"
        ],
        "properties": {
          "purityName": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      },
      "UpdatePurityMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "purityId",
          "purityName"
        ],
        "properties": {
          "purityId": {
            "type": "integer",
            "format": "int32"
          },
          "purityName": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      },
      "CreateDesignMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "designName"
        ],
        "properties": {
          "designName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "UpdateDesignMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "designId",
          "designName"
        ],
        "properties": {
          "designId": {
            "type": "integer",
            "format": "int32"
          },
          "designName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "CreateBoxMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "boxName"
        ],
        "properties": {
          "boxName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0,
            "nullable": true
          },
          "boxType": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "size": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "color": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "material": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "UpdateBoxMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "boxId",
          "boxName"
        ],
        "properties": {
          "boxId": {
            "type": "integer",
            "format": "int32"
          },
          "boxName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0,
            "nullable": true
          },
          "boxType": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "size": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "color": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "material": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateCounterMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "counterName",
          "branchId",
          "clientCode"
        ],
        "properties": {
          "counterName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      },
      "UpdateCounterMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "counterId",
          "counterName",
          "branchId",
          "clientCode"
        ],
        "properties": {
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      },
      "CreateBranchMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "branchName",
          "clientCode"
        ],
        "properties": {
          "branchName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "clientCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      },
      "UpdateBranchMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "branchId",
          "branchName",
          "clientCode"
        ],
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "clientCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      },
      "CreateProductMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productName"
        ],
        "properties": {
          "productName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "UpdateProductMasterDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId",
          "productName"
        ],
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "UserFriendlyCreateProductDto": {
        "type": "object",
        "description": "User-friendly DTO for creating products with text-based master data\nUsers can simply enter text values like \"Gold\", \"Pune\", \"Counter1\" instead of knowing IDs",
        "additionalProperties": false,
        "properties": {
          "itemCode": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "counterName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "designName": {
            "type": "string"
          },
          "purityName": {
            "type": "string"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "rfidNumber": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "stoneWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diamondHeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "boxDetails": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stoneAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "diamondAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hallmarkAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPerGram": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingFixedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BulkCreateProductsDto": {
        "type": "object",
        "description": "DTO for bulk product creation with user-friendly inputs",
        "additionalProperties": false,
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFriendlyCreateProductDto"
            }
          }
        }
      },
      "ProductImageUploadDto": {
        "type": "object",
        "description": "DTO for uploading product images",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserFriendlyUpdateProductDto": {
        "type": "object",
        "description": "User-friendly DTO for updating products",
        "additionalProperties": false,
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "counterName": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "designName": {
            "type": "string",
            "nullable": true
          },
          "purityName": {
            "type": "string",
            "nullable": true
          },
          "boxDetails": {
            "type": "string",
            "nullable": true
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "stoneWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diamondHeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stoneAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "diamondAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hallmarkAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPerGram": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingFixedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductImageUpdateDto": {
        "type": "object",
        "description": "DTO for updating product image",
        "additionalProperties": false,
        "properties": {
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "BulkImageOperationDto": {
        "type": "object",
        "description": "DTO for bulk image operations",
        "additionalProperties": false,
        "properties": {
          "imageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "StockMovementDto": {
        "type": "object",
        "description": "DTO for stock movement tracking",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateStockMovementDto": {
        "type": "object",
        "description": "DTO for stock movement creation",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "BulkStockMovementDto": {
        "type": "object",
        "description": "DTO for bulk stock movement creation",
        "additionalProperties": false,
        "properties": {
          "movements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateStockMovementDto"
            }
          },
          "movementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DailyStockBalanceDto": {
        "type": "object",
        "description": "DTO for daily stock balance",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "itemCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "balanceDate": {
            "type": "string",
            "format": "date-time"
          },
          "openingQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "closingQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "addedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "soldQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "returnedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "transferredInQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "transferredOutQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "openingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "closingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "addedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "soldValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "returnedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SalesReportDto": {
        "type": "object",
        "description": "DTO for sales report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalItemsSold": {
            "type": "integer",
            "format": "int32"
          },
          "totalSalesAmount": {
            "type": "number",
            "format": "decimal"
          },
          "totalDiscountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "netSalesAmount": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "StockSummaryReportDto": {
        "type": "object",
        "description": "DTO for stock summary report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "activeProducts": {
            "type": "integer",
            "format": "int32"
          },
          "soldProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalStockValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalSalesValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "DailyActivityReportDto": {
        "type": "object",
        "description": "DTO for daily activity report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "openingStock": {
            "type": "integer",
            "format": "int32"
          },
          "addedStock": {
            "type": "integer",
            "format": "int32"
          },
          "soldStock": {
            "type": "integer",
            "format": "int32"
          },
          "returnedStock": {
            "type": "integer",
            "format": "int32"
          },
          "transferredInStock": {
            "type": "integer",
            "format": "int32"
          },
          "transferredOutStock": {
            "type": "integer",
            "format": "int32"
          },
          "closingStock": {
            "type": "integer",
            "format": "int32"
          },
          "openingValue": {
            "type": "number",
            "format": "decimal"
          },
          "addedValue": {
            "type": "number",
            "format": "decimal"
          },
          "soldValue": {
            "type": "number",
            "format": "decimal"
          },
          "returnedValue": {
            "type": "number",
            "format": "decimal"
          },
          "transferredInValue": {
            "type": "number",
            "format": "decimal"
          },
          "transferredOutValue": {
            "type": "number",
            "format": "decimal"
          },
          "closingValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ReportSummaryDto": {
        "type": "object",
        "description": "DTO for report summary",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalAdded": {
            "type": "integer",
            "format": "int32"
          },
          "totalSold": {
            "type": "integer",
            "format": "int32"
          },
          "totalReturned": {
            "type": "integer",
            "format": "int32"
          },
          "totalAddedValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalSoldValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalReturnedValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "netSalesAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidUsageReportDto": {
        "type": "object",
        "description": "DTO for RFID usage report",
        "additionalProperties": false,
        "properties": {
          "clientCode": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          },
          "unusedPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "reportDate": {
            "type": "string",
            "format": "date-time"
          },
          "usedRfidDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RfidUsageDetailDto"
            }
          },
          "unusedRfidDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RfidUsageDetailDto"
            }
          }
        }
      },
      "RfidUsageDetailDto": {
        "type": "object",
        "description": "DTO for RFID usage detail",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string"
          },
          "epcValue": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemCode": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "counterName": {
            "type": "string",
            "nullable": true
          },
          "assignedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unassignedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RfidUsageByCategoryDto": {
        "type": "object",
        "description": "DTO for RFID usage summary by category",
        "additionalProperties": false,
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidUsageByBranchDto": {
        "type": "object",
        "description": "DTO for RFID usage summary by branch",
        "additionalProperties": false,
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidUsageByCounterDto": {
        "type": "object",
        "description": "DTO for RFID usage summary by counter",
        "additionalProperties": false,
        "properties": {
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string"
          },
          "epcValue": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateRfidDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string"
          },
          "epcValue": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          }
        }
      },
      "UpdateRfidDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "epcValue": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UsedRfidAnalysisDto": {
        "type": "object",
        "description": "DTO for used RFID tag analysis - includes count and detailed RFID information",
        "additionalProperties": false,
        "properties": {
          "totalUsedCount": {
            "type": "integer",
            "description": "Total count of used RFID tags",
            "format": "int32"
          },
          "usedRfids": {
            "type": "array",
            "description": "List of used RFID tags with their details",
            "items": {
              "$ref": "#/components/schemas/UsedRfidDetailDto"
            }
          },
          "summary": {
            "type": "string",
            "description": "Analysis summary"
          }
        }
      },
      "UsedRfidDetailDto": {
        "type": "object",
        "description": "DTO for individual used RFID tag details",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string",
            "description": "RFID tag code"
          },
          "epcValue": {
            "type": "string",
            "description": "EPC value of the RFID tag"
          },
          "productId": {
            "type": "integer",
            "description": "Product ID this RFID is assigned to",
            "format": "int32"
          },
          "assignedOn": {
            "type": "string",
            "description": "When the RFID was assigned to the product",
            "format": "date-time"
          },
          "productInfo": {
            "type": "string",
            "description": "Product details (if available)",
            "nullable": true
          }
        }
      },
      "UnusedRfidAnalysisDto": {
        "type": "object",
        "description": "DTO for unused RFID tag analysis - includes count and detailed RFID information",
        "additionalProperties": false,
        "properties": {
          "totalUnusedCount": {
            "type": "integer",
            "description": "Total count of unused RFID tags",
            "format": "int32"
          },
          "unusedRfids": {
            "type": "array",
            "description": "List of unused RFID tags with their details",
            "items": {
              "$ref": "#/components/schemas/UnusedRfidDetailDto"
            }
          },
          "summary": {
            "type": "string",
            "description": "Analysis summary"
          }
        }
      },
      "UnusedRfidDetailDto": {
        "type": "object",
        "description": "DTO for individual unused RFID tag details",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string",
            "description": "RFID tag code"
          },
          "epcValue": {
            "type": "string",
            "description": "EPC value of the RFID tag"
          },
          "createdOn": {
            "type": "string",
            "description": "When the RFID was created",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the RFID is active"
          }
        }
      },
      "RfidScanResponseDto": {
        "type": "object",
        "description": "DTO for RFID scan response - returns all products associated with scanned EPC values",
        "additionalProperties": false,
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the scan was successful"
          },
          "message": {
            "type": "string",
            "description": "Message describing the scan result"
          },
          "totalProductsFound": {
            "type": "integer",
            "description": "Total number of products found",
            "format": "int32"
          },
          "scanResults": {
            "type": "array",
            "description": "List of scanned products grouped by EPC value",
            "items": {
              "$ref": "#/components/schemas/EpcScanResultDto"
            }
          },
          "unmatchedEpcValues": {
            "type": "array",
            "description": "EPC values that were scanned but found no products",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EpcScanResultDto": {
        "type": "object",
        "description": "DTO for individual EPC scan result",
        "additionalProperties": false,
        "properties": {
          "epcValue": {
            "type": "string",
            "description": "The EPC value that was scanned"
          },
          "rfidCode": {
            "type": "string",
            "description": "RFID code associated with this EPC value"
          },
          "productCount": {
            "type": "integer",
            "description": "Number of products found for this EPC value",
            "format": "int32"
          },
          "products": {
            "type": "array",
            "description": "List of products associated with this EPC value",
            "items": {
              "$ref": "#/components/schemas/ScannedProductDto"
            }
          }
        }
      },
      "ScannedProductDto": {
        "type": "object",
        "description": "DTO for individual product found during RFID scan",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product ID",
            "format": "int32"
          },
          "itemCode": {
            "type": "string",
            "description": "Product item code"
          },
          "rfidCode": {
            "type": "string",
            "description": "RFID code assigned to this product"
          },
          "epcValue": {
            "type": "string",
            "description": "EPC value of the RFID tag"
          },
          "assignedOn": {
            "type": "string",
            "description": "When the RFID was assigned to this product",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Product status"
          },
          "categoryName": {
            "type": "string",
            "description": "Product category name"
          },
          "productName": {
            "type": "string",
            "description": "Product name"
          },
          "designName": {
            "type": "string",
            "description": "Design name"
          },
          "purityName": {
            "type": "string",
            "description": "Purity name"
          },
          "branchName": {
            "type": "string",
            "description": "Branch name where product is located"
          },
          "counterName": {
            "type": "string",
            "description": "Counter name where product is located"
          },
          "grossWeight": {
            "type": "number",
            "description": "Gross weight",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "description": "Net weight",
            "format": "float",
            "nullable": true
          },
          "stoneWeight": {
            "type": "number",
            "description": "Stone weight",
            "format": "float",
            "nullable": true
          },
          "diamondHeight": {
            "type": "number",
            "description": "Diamond height",
            "format": "float",
            "nullable": true
          },
          "boxDetails": {
            "type": "string",
            "description": "Box details",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Product size",
            "format": "int32",
            "nullable": true
          },
          "stoneAmount": {
            "type": "number",
            "description": "Stone amount",
            "format": "decimal",
            "nullable": true
          },
          "diamondAmount": {
            "type": "number",
            "description": "Diamond amount",
            "format": "decimal",
            "nullable": true
          },
          "hallmarkAmount": {
            "type": "number",
            "description": "Hallmark amount",
            "format": "decimal",
            "nullable": true
          },
          "makingPerGram": {
            "type": "number",
            "description": "Making charge per gram",
            "format": "decimal",
            "nullable": true
          },
          "makingPercentage": {
            "type": "number",
            "description": "Making charge percentage",
            "format": "decimal",
            "nullable": true
          },
          "makingFixedAmount": {
            "type": "number",
            "description": "Fixed making charge amount",
            "format": "decimal",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "description": "MRP (Maximum Retail Price)",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Product image URL",
            "nullable": true
          }
        }
      },
      "RfidScanRequestDto": {
        "type": "object",
        "description": "DTO for RFID scan request - user provides EPC value to scan",
        "additionalProperties": false,
        "properties": {
          "epcValue": {
            "type": "string",
            "description": "Single EPC value to scan for (for backward compatibility)",
            "nullable": true
          },
          "epcValues": {
            "type": "array",
            "description": "Multiple EPC values to scan for (new feature)",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RfidExcelUploadResponseDto": {
        "type": "object",
        "description": "DTO for RFID Excel upload response",
        "additionalProperties": false,
        "properties": {
          "totalRowsProcessed": {
            "type": "integer",
            "description": "Total rows processed",
            "format": "int32"
          },
          "newRfidsCreated": {
            "type": "integer",
            "description": "Number of new RFID codes created",
            "format": "int32"
          },
          "existingRfidsUpdated": {
            "type": "integer",
            "description": "Number of existing RFID codes updated",
            "format": "int32"
          },
          "errorRows": {
            "type": "integer",
            "description": "Number of rows with errors",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "description": "List of errors encountered during processing",
            "items": {
              "type": "string"
            }
          },
          "processedRows": {
            "type": "array",
            "description": "List of successfully processed rows",
            "items": {
              "$ref": "#/components/schemas/RfidExcelRowDto"
            }
          },
          "summary": {
            "type": "string",
            "description": "Summary message"
          }
        }
      },
      "RfidExcelRowDto": {
        "type": "object",
        "description": "DTO for individual RFID data from Excel",
        "additionalProperties": false,
        "required": [
          "rfidCode",
          "epcValue"
        ],
        "properties": {
          "rfidCode": {
            "type": "string",
            "description": "RFID Code from Excel column 1",
            "maxLength": 50,
            "minLength": 0
          },
          "epcValue": {
            "type": "string",
            "description": "EPC Value from Excel column 2",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "StockTransferResponseDto": {
        "type": "object",
        "description": "DTO for stock transfer response",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "transferNumber": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "transferType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "transferDate": {
            "type": "string",
            "format": "date-time"
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "approvedBy": {
            "type": "string",
            "nullable": true
          },
          "approvedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rejectedBy": {
            "type": "string",
            "nullable": true
          },
          "rejectedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceLocation": {
            "$ref": "#/components/schemas/LocationInfo"
          },
          "destinationLocation": {
            "$ref": "#/components/schemas/LocationInfo"
          },
          "product": {
            "$ref": "#/components/schemas/ProductInfo"
          }
        }
      },
      "LocationInfo": {
        "type": "object",
        "description": "DTO for location information",
        "additionalProperties": false,
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "boxId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "boxName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductInfo": {
        "type": "object",
        "description": "DTO for product information in transfer",
        "additionalProperties": false,
        "properties": {
          "itemCode": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "designName": {
            "type": "string"
          },
          "purityName": {
            "type": "string"
          },
          "grossWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateStockTransferDto": {
        "type": "object",
        "description": "DTO for creating a new stock transfer",
        "additionalProperties": false,
        "required": [
          "productId",
          "transferType",
          "sourceBranchId",
          "sourceCounterId",
          "destinationBranchId",
          "destinationCounterId"
        ],
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "transferType": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceCounterId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceBoxId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationCounterId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBoxId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "BulkTransferResponseDto": {
        "type": "object",
        "description": "DTO for bulk transfer response",
        "additionalProperties": false,
        "properties": {
          "totalTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "successfullyCreated": {
            "type": "integer",
            "format": "int32"
          },
          "failed": {
            "type": "integer",
            "format": "int32"
          },
          "createdTransfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockTransferResponseDto"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BulkStockTransferDto": {
        "type": "object",
        "description": "DTO for bulk stock transfers",
        "additionalProperties": false,
        "required": [
          "transfers"
        ],
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateStockTransferDto"
            }
          },
          "commonReason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          },
          "commonRemarks": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateTransferStatusDto": {
        "type": "object",
        "description": "DTO for updating transfer status",
        "additionalProperties": false,
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "remarks": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          },
          "actionBy": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "ApproveTransferDto": {
        "type": "object",
        "description": "DTO for transfer approval",
        "additionalProperties": false,
        "required": [
          "approvedBy"
        ],
        "properties": {
          "approvedBy": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "remarks": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "RejectTransferDto": {
        "type": "object",
        "description": "DTO for transfer rejection",
        "additionalProperties": false,
        "required": [
          "rejectedBy",
          "rejectionReason"
        ],
        "properties": {
          "rejectedBy": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "rejectionReason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0
          },
          "remarks": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "TransferSummaryDto": {
        "type": "object",
        "description": "DTO for transfer summary",
        "additionalProperties": false,
        "properties": {
          "totalTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "pendingTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "inTransitTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "completedTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "cancelledTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "rejectedTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "totalValue": {
            "type": "number",
            "format": "decimal"
          },
          "transferTypeSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferTypeSummary"
            }
          },
          "branchTransferSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchTransferSummary"
            }
          }
        }
      },
      "TransferTypeSummary": {
        "type": "object",
        "description": "DTO for transfer type summary",
        "additionalProperties": false,
        "properties": {
          "transferType": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "BranchTransferSummary": {
        "type": "object",
        "description": "DTO for branch transfer summary",
        "additionalProperties": false,
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "incomingTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "outgoingTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "incomingValue": {
            "type": "number",
            "format": "decimal"
          },
          "outgoingValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "StockVerificationResponseDto": {
        "type": "object",
        "description": "DTO for stock verification response",
        "additionalProperties": false,
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StockVerificationDto"
              }
            ]
          }
        }
      },
      "StockVerificationDto": {
        "type": "object",
        "description": "DTO for stock verification details",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "verificationSessionName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "verificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "verificationTime": {
            "type": "string",
            "format": "duration"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalItemsScanned": {
            "type": "integer",
            "format": "int32"
          },
          "matchedItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "unmatchedItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "missingItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalMatchedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalUnmatchedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalMissingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "verifiedBy": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "completedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verificationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockVerificationDetailDto"
            }
          }
        }
      },
      "StockVerificationDetailDto": {
        "type": "object",
        "description": "DTO for individual verification detail",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "itemCode": {
            "type": "string"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "verificationStatus": {
            "type": "string"
          },
          "scannedAt": {
            "type": "string",
            "format": "date-time"
          },
          "scannedTime": {
            "type": "string",
            "format": "duration"
          },
          "scannedBy": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "productDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductDetailsDto"
              }
            ]
          }
        }
      },
      "ProductDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "itemCode": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "designId": {
            "type": "integer",
            "format": "int32"
          },
          "purityId": {
            "type": "integer",
            "format": "int32"
          },
          "boxId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "stoneWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diamondHeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stoneAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "diamondAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hallmarkAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPerGram": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingFixedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "designName": {
            "type": "string",
            "nullable": true
          },
          "purityName": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "counterName": {
            "type": "string",
            "nullable": true
          },
          "boxDetails": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateStockVerificationDto": {
        "type": "object",
        "description": "DTO for creating a new stock verification session",
        "additionalProperties": false,
        "required": [
          "verificationSessionName",
          "verificationDate",
          "verificationTime",
          "branchName",
          "counterName",
          "categoryId"
        ],
        "properties": {
          "verificationSessionName": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "verificationDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "verificationTime": {
            "type": "string",
            "format": "duration",
            "minLength": 1
          },
          "branchName": {
            "type": "string",
            "minLength": 1
          },
          "counterName": {
            "type": "string",
            "minLength": 1
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "verifiedBy": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubmitStockVerificationDto": {
        "type": "object",
        "description": "DTO for submitting scanned items for verification",
        "additionalProperties": false,
        "required": [
          "stockVerificationId",
          "matchedItemCodes",
          "unmatchedItemCodes"
        ],
        "properties": {
          "stockVerificationId": {
            "type": "integer",
            "format": "int32"
          },
          "matchedItemCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unmatchedItemCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scannedBy": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StockVerificationReportResponseDto": {
        "type": "object",
        "description": "DTO for stock verification report response",
        "additionalProperties": false,
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockVerificationDto"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/StockVerificationSummaryDto"
          }
        }
      },
      "StockVerificationSummaryDto": {
        "type": "object",
        "description": "DTO for stock verification summary",
        "additionalProperties": false,
        "properties": {
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "completedSessions": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressSessions": {
            "type": "integer",
            "format": "int32"
          },
          "totalItemsVerified": {
            "type": "integer",
            "format": "int32"
          },
          "totalMatchedItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnmatchedItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalMissingItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalMatchedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalUnmatchedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalMissingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "recentSessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockVerificationDto"
            }
          }
        }
      },
      "DateWiseStockVerificationReportDto": {
        "type": "object",
        "description": "DTO for date-wise stock verification report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "totalItemsScanned": {
            "type": "integer",
            "format": "int32"
          },
          "totalMatchedItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnmatchedItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalMissingItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalMatchedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalUnmatchedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalMissingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockVerificationDto"
            }
          }
        }
      },
      "UserDto": {
        "type": "object",
        "description": "User data transfer object for API responses",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "description": "Unique identifier for the user",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Username for login"
          },
          "email": {
            "type": "string",
            "description": "Email address (unique)"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City where the user is located",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Physical address",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "description": "Organization/company name"
          },
          "showroomType": {
            "type": "string",
            "description": "Type of showroom (e.g., Premium, Standard)",
            "nullable": true
          },
          "clientCode": {
            "type": "string",
            "description": "Unique client code (e.g., LS0001)"
          },
          "databaseName": {
            "type": "string",
            "description": "Database name for the client",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "description": "Connection string for the client database",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Whether the user is an admin"
          },
          "userType": {
            "type": "string",
            "description": "User type (MainAdmin, Admin, User)"
          },
          "adminUserId": {
            "type": "integer",
            "description": "ID of the admin user who created this user (null for main admin)",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user is active"
          },
          "createdOn": {
            "type": "string",
            "description": "When the user was created",
            "format": "date-time"
          },
          "lastLoginDate": {
            "type": "string",
            "description": "Last login date",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "description": "Data transfer object for creating a new user",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "description": "Username for login (required)"
          },
          "email": {
            "type": "string",
            "description": "Email address (required, unique)"
          },
          "password": {
            "type": "string",
            "description": "Password (required)"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City where the user is located",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Physical address",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "description": "Organization/company name (required)"
          },
          "showroomType": {
            "type": "string",
            "description": "Type of showroom (e.g., Premium, Standard)",
            "nullable": true
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "description": "Data transfer object for login response",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          },
          "user": {
            "description": "User information",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "expiresAt": {
            "type": "string",
            "description": "When the token expires",
            "format": "date-time"
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "description": "Data transfer object for user login",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address (required)"
          },
          "password": {
            "type": "string",
            "description": "Password (required)"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "description": "Data transfer object for updating user information",
        "additionalProperties": false,
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City where the user is located",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Physical address",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "description": "Organization/company name",
            "nullable": true
          },
          "showroomType": {
            "type": "string",
            "description": "Type of showroom (e.g., Premium, Standard)",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user is active",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer"
      }
    }
  }
}