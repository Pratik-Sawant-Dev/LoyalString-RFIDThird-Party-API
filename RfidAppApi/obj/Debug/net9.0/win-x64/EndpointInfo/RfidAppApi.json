{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "RFID Jewelry Inventory System API",
    "description": "Multi-tenant RFID Jewelry Inventory Management System API",
    "version": "v1"
  },
  "paths": {
    "/api/DatabaseMigration/health": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Get database health status for all clients",
        "operationId": "DatabaseMigration_GetDatabaseHealth",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/health/{clientCode}": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Get database health status for a specific client",
        "operationId": "DatabaseMigration_GetClientDatabaseHealth",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/migrate/{clientCode}": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Migrate a specific client database",
        "operationId": "DatabaseMigration_MigrateClientDatabase",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/migrate-all": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Migrate all client databases",
        "operationId": "DatabaseMigration_MigrateAllClientDatabases",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/repair/{clientCode}": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Force repair a specific client database",
        "operationId": "DatabaseMigration_RepairClientDatabase",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/statistics": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Get migration statistics",
        "operationId": "DatabaseMigration_GetMigrationStatistics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/emergency-repair-all": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Emergency database repair for all clients",
        "operationId": "DatabaseMigration_EmergencyRepairAllDatabases",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/test-tables/{clientCode}": {
      "get": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Test endpoint to verify table creation for a specific client",
        "operationId": "DatabaseMigration_TestTableCreation",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/DatabaseMigration/force-create-tables/{clientCode}": {
      "post": {
        "tags": [
          "DatabaseMigration"
        ],
        "summary": "Force create missing tables for a specific client",
        "operationId": "DatabaseMigration_ForceCreateMissingTables",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "Error"
        ],
        "operationId": "Error_Error",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create a new invoice",
        "operationId": "Invoice_CreateInvoice",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get all invoices with pagination and filtering",
        "operationId": "Invoice_GetAllInvoices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            },
            "x-position": 2
          },
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "invoiceType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "minAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "maxAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "CreatedOn",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "desc",
              "nullable": true
            },
            "x-position": 11
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInvoiceResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/{invoiceId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by ID",
        "operationId": "Invoice_GetInvoiceById",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update an existing invoice",
        "operationId": "Invoice_UpdateInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete an invoice (soft delete)",
        "operationId": "Invoice_DeleteInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-date-range": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by date range",
        "operationId": "Invoice_GetInvoicesByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-product/{productId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by product ID",
        "operationId": "Invoice_GetInvoicesByProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-customer": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by customer name (partial match)",
        "operationId": "Invoice_GetInvoicesByCustomer",
        "parameters": [
          {
            "name": "customerName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/by-payment-method": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices by payment method",
        "operationId": "Invoice_GetInvoicesByPaymentMethod",
        "parameters": [
          {
            "name": "paymentMethod",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/statistics": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get comprehensive invoice statistics",
        "operationId": "Invoice_GetInvoiceStatistics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceStatisticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/revenue-analytics": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get revenue analytics by date range",
        "operationId": "Invoice_GetRevenueAnalytics",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "groupBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "day",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueAnalyticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/top-products": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get top performing products by revenue",
        "operationId": "Invoice_GetTopProducts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "x-position": 1
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopProductDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/bulk": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create multiple invoices in bulk",
        "operationId": "Invoice_CreateBulkInvoices",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateInvoiceDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkInvoiceResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/export/csv": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Export invoices to CSV format",
        "operationId": "Invoice_ExportInvoicesToCsv",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "invoiceType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/create": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product with user-friendly inputs\nUsers can simply enter text values like \"Gold\", \"Pune\", \"Counter1\" instead of knowing IDs",
        "operationId": "Product_CreateProduct",
        "requestBody": {
          "x-name": "createDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFriendlyCreateProductDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/bulk-create": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create multiple products in bulk with user-friendly inputs",
        "operationId": "Product_CreateBulkProducts",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateProductsDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/create-with-images": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product with images",
        "operationId": "Product_CreateProductWithImages",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "Images": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/components/schemas/ProductImageUploadDto"
                    }
                  },
                  "ItemCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "CategoryName": {
                    "type": "string",
                    "nullable": true
                  },
                  "BranchName": {
                    "type": "string",
                    "nullable": true
                  },
                  "CounterName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProductName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DesignName": {
                    "type": "string",
                    "nullable": true
                  },
                  "PurityName": {
                    "type": "string",
                    "nullable": true
                  },
                  "RfidCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "GrossWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "StoneWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "DiamondHeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "NetWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "BoxDetails": {
                    "type": "string",
                    "nullable": true
                  },
                  "Size": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "StoneAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DiamondAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "HallmarkAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPerGram": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPercentage": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingFixedAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "Mrp": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "ImageUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "Status": {
                    "type": "string",
                    "nullable": true
                  },
                  "images": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a product by ID with user-friendly response",
        "operationId": "Product_GetProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product with user-friendly inputs\nUsers can update master data using text values instead of IDs",
        "operationId": "Product_UpdateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFriendlyUpdateProductDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product by ID",
        "operationId": "Product_DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/all": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products with user-friendly response",
        "operationId": "Product_GetAllProducts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}/with-images": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product with images",
        "operationId": "Product_UpdateProductWithImages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ImagesToAdd": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/components/schemas/ProductImageUploadDto"
                    }
                  },
                  "ImageIdsToRemove": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "CategoryName": {
                    "type": "string",
                    "nullable": true
                  },
                  "BranchName": {
                    "type": "string",
                    "nullable": true
                  },
                  "CounterName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProductName": {
                    "type": "string",
                    "nullable": true
                  },
                  "DesignName": {
                    "type": "string",
                    "nullable": true
                  },
                  "PurityName": {
                    "type": "string",
                    "nullable": true
                  },
                  "RfidCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "GrossWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "StoneWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "DiamondHeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "NetWeight": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "BoxDetails": {
                    "type": "string",
                    "nullable": true
                  },
                  "Size": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "StoneAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DiamondAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "HallmarkAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPerGram": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingPercentage": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "MakingFixedAmount": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "Mrp": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "ImageUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "Status": {
                    "type": "string",
                    "nullable": true
                  },
                  "newImages": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/search": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Search products by various criteria",
        "operationId": "Product_SearchProducts",
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "branchName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "counterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "productName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "designName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "purityName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "minPrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "maxPrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/stats": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product statistics",
        "operationId": "Product_GetProductStats",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/image/{filePath}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Serve product image by file path",
        "operationId": "Product_GetProductImage",
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/upload": {
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Upload a single image for a product",
        "operationId": "ProductImage_UploadImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "array",
                    "nullable": true,
                    "items": {}
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProductId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ImageType": {
                    "type": "string",
                    "nullable": true
                  },
                  "DisplayOrder": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/upload-multiple": {
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Upload multiple images for products",
        "operationId": "ProductImage_UploadMultipleImages",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "files": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "uploadDtosJson": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/{id}": {
      "get": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Get a specific image by ID",
        "operationId": "ProductImage_GetImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Update image metadata",
        "operationId": "ProductImage_UpdateImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductImageUpdateDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Delete a specific image",
        "operationId": "ProductImage_DeleteImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/product/{productId}": {
      "get": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Get all images for a specific product",
        "operationId": "ProductImage_GetProductImages",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Delete all images for a specific product",
        "operationId": "ProductImage_DeleteProductImages",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/bulk-update": {
      "put": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Bulk update images",
        "operationId": "ProductImage_BulkUpdateImages",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkImageOperationDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/bulk-delete": {
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Bulk delete images",
        "operationId": "ProductImage_BulkDeleteImages",
        "requestBody": {
          "x-name": "imageIds",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductImage/validate": {
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "Validate image file",
        "operationId": "ProductImage_ValidateImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "array",
                    "nullable": true,
                    "items": {}
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-movements": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Create a new stock movement",
        "operationId": "Reporting_CreateStockMovement",
        "requestBody": {
          "x-name": "movementDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockMovementDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock movements with filters",
        "operationId": "Reporting_GetStockMovements",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockMovementDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-movements/bulk": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Create multiple stock movements in bulk",
        "operationId": "Reporting_CreateBulkStockMovements",
        "requestBody": {
          "x-name": "bulkDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkStockMovementDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockMovementDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-movements/{movementId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock movement by ID",
        "operationId": "Reporting_GetStockMovementById",
        "parameters": [
          {
            "name": "movementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances/{productId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily stock balance for a specific product and date",
        "operationId": "Reporting_GetDailyStockBalance",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyStockBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily stock balances with filters",
        "operationId": "Reporting_GetDailyStockBalances",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyStockBalanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances/calculate/{productId}/{date}": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Calculate daily stock balance for a specific product and date",
        "operationId": "Reporting_CalculateDailyStockBalance",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyStockBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-balances/calculate/{date}": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Calculate daily stock balances for all products on a specific date",
        "operationId": "Reporting_CalculateDailyStockBalances",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyStockBalanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report with filters",
        "operationId": "Reporting_GetSalesReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific date",
        "operationId": "Reporting_GetSalesReportByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/range": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a date range",
        "operationId": "Reporting_GetSalesReportByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific branch on a date",
        "operationId": "Reporting_GetSalesReportByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific counter on a date",
        "operationId": "Reporting_GetSalesReportByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/sales/category/{categoryId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get sales report for a specific category on a date",
        "operationId": "Reporting_GetSalesReportByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary report with filters",
        "operationId": "Reporting_GetStockSummaryReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockSummaryReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific date",
        "operationId": "Reporting_GetStockSummaryByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific branch on a date",
        "operationId": "Reporting_GetStockSummaryByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific counter on a date",
        "operationId": "Reporting_GetStockSummaryByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock-summary/category/{categoryId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get stock summary for a specific category on a date",
        "operationId": "Reporting_GetStockSummaryByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockSummaryReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity report with filters",
        "operationId": "Reporting_GetDailyActivityReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CounterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MovementType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "RfidCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "ItemCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyActivityReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific date",
        "operationId": "Reporting_GetDailyActivityByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific branch on a date",
        "operationId": "Reporting_GetDailyActivityByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific counter on a date",
        "operationId": "Reporting_GetDailyActivityByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/daily-activity/category/{categoryId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get daily activity for a specific category on a date",
        "operationId": "Reporting_GetDailyActivityByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyActivityReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a specific date",
        "operationId": "Reporting_GetReportSummary",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/range": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a date range",
        "operationId": "Reporting_GetReportSummaryByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/branch/{branchId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a specific branch on a date",
        "operationId": "Reporting_GetReportSummaryByBranch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/summary/counter/{counterId}/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get report summary for a specific counter on a date",
        "operationId": "Reporting_GetReportSummaryByCounter",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/{productId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific product",
        "operationId": "Reporting_GetCurrentStock",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/{productId}/branch/{branchId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific product by branch",
        "operationId": "Reporting_GetCurrentStockByBranch",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/{productId}/counter/{counterId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific product by counter",
        "operationId": "Reporting_GetCurrentStockByCounter",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/current/category/{categoryId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock for a specific category",
        "operationId": "Reporting_GetCurrentStockByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/{productId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific product",
        "operationId": "Reporting_GetCurrentStockValue",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/{productId}/branch/{branchId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific product by branch",
        "operationId": "Reporting_GetCurrentStockValueByBranch",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/{productId}/counter/{counterId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific product by counter",
        "operationId": "Reporting_GetCurrentStockValueByCounter",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/stock/value/category/{categoryId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get current stock value for a specific category",
        "operationId": "Reporting_GetCurrentStockValueByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/process-balances/{date}": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Process daily stock balances for a specific date",
        "operationId": "Reporting_ProcessDailyStockBalances",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/process-balances/range": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Process daily stock balances for a date range",
        "operationId": "Reporting_ProcessAllDailyStockBalances",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/recalculate-balances": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "summary": "Recalculate stock balances for a date range",
        "operationId": "Reporting_RecalculateStockBalances",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get comprehensive RFID usage report",
        "operationId": "Reporting_GetRfidUsageReport",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/date/{date}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage report for a specific date",
        "operationId": "Reporting_GetRfidUsageReportByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/used": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get all used RFID tags",
        "operationId": "Reporting_GetUsedRfidTags",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/unused": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get all unused RFID tags",
        "operationId": "Reporting_GetUnusedRfidTags",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/status/{isUsed}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID tags by usage status",
        "operationId": "Reporting_GetRfidTagsByStatus",
        "parameters": [
          {
            "name": "isUsed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageDetailDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/by-category": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary by category",
        "operationId": "Reporting_GetRfidUsageByCategory",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageByCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/by-branch": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary by branch",
        "operationId": "Reporting_GetRfidUsageByBranch",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageByBranchDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/by-counter": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary by counter",
        "operationId": "Reporting_GetRfidUsageByCounter",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidUsageByCounterDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/category/{categoryId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary for a specific category",
        "operationId": "Reporting_GetRfidUsageByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageByCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/branch/{branchId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary for a specific branch",
        "operationId": "Reporting_GetRfidUsageByBranchId",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageByBranchDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/counter/{counterId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage summary for a specific counter",
        "operationId": "Reporting_GetRfidUsageByCounterId",
        "parameters": [
          {
            "name": "counterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidUsageByCounterDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/count/total": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get total count of RFID tags",
        "operationId": "Reporting_GetTotalRfidTagsCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/count/used": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get count of used RFID tags",
        "operationId": "Reporting_GetUsedRfidTagsCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/count/unused": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get count of unused RFID tags",
        "operationId": "Reporting_GetUnusedRfidTagsCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/rfid-usage/percentage": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "Get RFID usage percentage",
        "operationId": "Reporting_GetRfidUsagePercentage",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/Rfid": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get all RFID tags for the authenticated client",
        "operationId": "Rfid_GetAllRfids",
        "responses": {
          "200": {
            "description": "RFID tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Rfid"
        ],
        "summary": "Create a new RFID tag for the authenticated client",
        "operationId": "Rfid_CreateRfid",
        "requestBody": {
          "x-name": "createRfidDto",
          "description": "RFID tag creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRfidDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "RFID tag created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/{rfidCode}": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get RFID tag by code for the authenticated client",
        "operationId": "Rfid_GetRfidByCode",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID tag code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "RFID tag found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RFID tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Rfid"
        ],
        "summary": "Update an existing RFID tag for the authenticated client",
        "operationId": "Rfid_UpdateRfid",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID tag code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateRfidDto",
          "description": "Updated RFID tag information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRfidDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "RFID tag updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfidDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RFID tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Rfid"
        ],
        "summary": "Delete an RFID tag for the authenticated client",
        "operationId": "Rfid_DeleteRfid",
        "parameters": [
          {
            "name": "rfidCode",
            "in": "path",
            "required": true,
            "description": "RFID tag code",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "RFID tag deleted successfully"
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RFID tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/available": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get available RFID tags (not assigned to any product) for the authenticated client",
        "operationId": "Rfid_GetAvailableRfids",
        "responses": {
          "200": {
            "description": "Available RFID tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/active": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get active RFID tags for the authenticated client",
        "operationId": "Rfid_GetActiveRfids",
        "responses": {
          "200": {
            "description": "Active RFID tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RfidDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/count": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get RFID count for the authenticated client",
        "operationId": "Rfid_GetRfidCount",
        "responses": {
          "200": {
            "description": "RFID count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/used-analysis": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get detailed analysis of used RFID tags (assigned to products) for the authenticated client",
        "operationId": "Rfid_GetUsedRfidAnalysis",
        "responses": {
          "200": {
            "description": "Used RFID analysis retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsedRfidAnalysisDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/Rfid/unused-analysis": {
      "get": {
        "tags": [
          "Rfid"
        ],
        "summary": "Get detailed analysis of unused RFID tags (not assigned to products) for the authenticated client",
        "operationId": "Rfid_GetUnusedRfidAnalysis",
        "responses": {
          "200": {
            "description": "Unused RFID analysis retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnusedRfidAnalysisDto"
                }
              }
            }
          },
          "400": {
            "description": "Client code not found in token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register a new client organization with automatic database creation",
        "operationId": "User_Register",
        "requestBody": {
          "x-name": "createUserDto",
          "description": "User registration details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authenticate user and get JWT token",
        "operationId": "User_Login",
        "requestBody": {
          "x-name": "loginDto",
          "description": "Login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by ID",
        "operationId": "User_GetUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "operationId": "User_UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateUserDto",
          "description": "Updated user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user (soft delete - sets IsActive to false)",
        "operationId": "User_DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/by-email/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by email address",
        "operationId": "User_GetUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "Email address",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User/by-client-code/{clientCode}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by client code",
        "operationId": "User_GetUserByClientCode",
        "parameters": [
          {
            "name": "clientCode",
            "in": "path",
            "required": true,
            "description": "Client code (e.g., LS0001)",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all active users",
        "operationId": "User_GetAllUsers",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InvoiceResponseDto": {
        "type": "object",
        "description": "DTO for invoice response",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "decimal"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "finalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceType": {
            "type": "string"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "soldOn": {
            "type": "string",
            "format": "date-time"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateInvoiceDto": {
        "type": "object",
        "description": "DTO for creating invoice",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "decimal"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "finalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceType": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "soldOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInvoiceResponseDto": {
        "type": "object",
        "description": "DTO for paginated invoice response",
        "additionalProperties": false,
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponseDto"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfoDto"
          }
        }
      },
      "PaginationInfoDto": {
        "type": "object",
        "description": "DTO for pagination information",
        "additionalProperties": false,
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          }
        }
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "description": "DTO for updating invoice",
        "additionalProperties": false,
        "properties": {
          "sellingPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "finalAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvoiceStatisticsDto": {
        "type": "object",
        "description": "DTO for invoice statistics",
        "additionalProperties": false,
        "properties": {
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "todayInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "monthInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "yearInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "todayRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "monthRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "yearRevenue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RevenueAnalyticsDto": {
        "type": "object",
        "description": "DTO for revenue analytics",
        "additionalProperties": false,
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "groupBy": {
            "type": "string"
          },
          "totalRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          },
          "revenueByPeriod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevenuePeriodDto"
            }
          }
        }
      },
      "RevenuePeriodDto": {
        "type": "object",
        "description": "DTO for revenue period",
        "additionalProperties": false,
        "properties": {
          "period": {
            "type": "string"
          },
          "revenue": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "TopProductDto": {
        "type": "object",
        "description": "DTO for top performing products",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "totalRevenue": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          },
          "lastSoldOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BulkInvoiceResponseDto": {
        "type": "object",
        "description": "DTO for bulk invoice response",
        "additionalProperties": false,
        "properties": {
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "successfullyCreated": {
            "type": "integer",
            "format": "int32"
          },
          "failed": {
            "type": "integer",
            "format": "int32"
          },
          "createdInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponseDto"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BulkCreateInvoiceDto": {
        "type": "object",
        "description": "DTO for bulk invoice creation",
        "additionalProperties": false,
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceDto"
            }
          }
        }
      },
      "UserFriendlyCreateProductDto": {
        "type": "object",
        "description": "User-friendly DTO for creating products with text-based master data\nUsers can simply enter text values like \"Gold\", \"Pune\", \"Counter1\" instead of knowing IDs",
        "additionalProperties": false,
        "properties": {
          "itemCode": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "counterName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "designName": {
            "type": "string"
          },
          "purityName": {
            "type": "string"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "stoneWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diamondHeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "boxDetails": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stoneAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "diamondAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hallmarkAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPerGram": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingFixedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BulkCreateProductsDto": {
        "type": "object",
        "description": "DTO for bulk product creation with user-friendly inputs",
        "additionalProperties": false,
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFriendlyCreateProductDto"
            }
          }
        }
      },
      "ProductImageUploadDto": {
        "type": "object",
        "description": "DTO for uploading product images",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserFriendlyUpdateProductDto": {
        "type": "object",
        "description": "User-friendly DTO for updating products",
        "additionalProperties": false,
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "counterName": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "designName": {
            "type": "string",
            "nullable": true
          },
          "purityName": {
            "type": "string",
            "nullable": true
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "stoneWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diamondHeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "boxDetails": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stoneAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "diamondAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hallmarkAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPerGram": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingPercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "makingFixedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "mrp": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductImageUpdateDto": {
        "type": "object",
        "description": "DTO for updating product image",
        "additionalProperties": false,
        "properties": {
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "BulkImageOperationDto": {
        "type": "object",
        "description": "DTO for bulk image operations",
        "additionalProperties": false,
        "properties": {
          "imageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "StockMovementDto": {
        "type": "object",
        "description": "DTO for stock movement tracking",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateStockMovementDto": {
        "type": "object",
        "description": "DTO for stock movement creation",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "BulkStockMovementDto": {
        "type": "object",
        "description": "DTO for bulk stock movement creation",
        "additionalProperties": false,
        "properties": {
          "movements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateStockMovementDto"
            }
          },
          "movementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DailyStockBalanceDto": {
        "type": "object",
        "description": "DTO for daily stock balance",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientCode": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "rfidCode": {
            "type": "string",
            "nullable": true
          },
          "itemCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "balanceDate": {
            "type": "string",
            "format": "date-time"
          },
          "openingQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "closingQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "addedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "soldQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "returnedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "transferredInQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "transferredOutQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "openingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "closingValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "addedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "soldValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "returnedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SalesReportDto": {
        "type": "object",
        "description": "DTO for sales report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalItemsSold": {
            "type": "integer",
            "format": "int32"
          },
          "totalSalesAmount": {
            "type": "number",
            "format": "decimal"
          },
          "totalDiscountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "netSalesAmount": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "averageTicketValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "StockSummaryReportDto": {
        "type": "object",
        "description": "DTO for stock summary report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "activeProducts": {
            "type": "integer",
            "format": "int32"
          },
          "soldProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalStockValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalSalesValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "DailyActivityReportDto": {
        "type": "object",
        "description": "DTO for daily activity report",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "openingStock": {
            "type": "integer",
            "format": "int32"
          },
          "addedStock": {
            "type": "integer",
            "format": "int32"
          },
          "soldStock": {
            "type": "integer",
            "format": "int32"
          },
          "returnedStock": {
            "type": "integer",
            "format": "int32"
          },
          "transferredInStock": {
            "type": "integer",
            "format": "int32"
          },
          "transferredOutStock": {
            "type": "integer",
            "format": "int32"
          },
          "closingStock": {
            "type": "integer",
            "format": "int32"
          },
          "openingValue": {
            "type": "number",
            "format": "decimal"
          },
          "addedValue": {
            "type": "number",
            "format": "decimal"
          },
          "soldValue": {
            "type": "number",
            "format": "decimal"
          },
          "returnedValue": {
            "type": "number",
            "format": "decimal"
          },
          "transferredInValue": {
            "type": "number",
            "format": "decimal"
          },
          "transferredOutValue": {
            "type": "number",
            "format": "decimal"
          },
          "closingValue": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ReportSummaryDto": {
        "type": "object",
        "description": "DTO for report summary",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalAdded": {
            "type": "integer",
            "format": "int32"
          },
          "totalSold": {
            "type": "integer",
            "format": "int32"
          },
          "totalReturned": {
            "type": "integer",
            "format": "int32"
          },
          "totalAddedValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalSoldValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalReturnedValue": {
            "type": "number",
            "format": "decimal"
          },
          "totalInvoices": {
            "type": "integer",
            "format": "int32"
          },
          "netSalesAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidUsageReportDto": {
        "type": "object",
        "description": "DTO for RFID usage report",
        "additionalProperties": false,
        "properties": {
          "clientCode": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          },
          "unusedPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "reportDate": {
            "type": "string",
            "format": "date-time"
          },
          "usedRfidDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RfidUsageDetailDto"
            }
          },
          "unusedRfidDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RfidUsageDetailDto"
            }
          }
        }
      },
      "RfidUsageDetailDto": {
        "type": "object",
        "description": "DTO for RFID usage detail",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string"
          },
          "epcValue": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemCode": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "counterName": {
            "type": "string",
            "nullable": true
          },
          "assignedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unassignedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RfidUsageByCategoryDto": {
        "type": "object",
        "description": "DTO for RFID usage summary by category",
        "additionalProperties": false,
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidUsageByBranchDto": {
        "type": "object",
        "description": "DTO for RFID usage summary by branch",
        "additionalProperties": false,
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidUsageByCounterDto": {
        "type": "object",
        "description": "DTO for RFID usage summary by counter",
        "additionalProperties": false,
        "properties": {
          "counterId": {
            "type": "integer",
            "format": "int32"
          },
          "counterName": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string"
          },
          "totalRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "unusedRfidTags": {
            "type": "integer",
            "format": "int32"
          },
          "usagePercentage": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RfidDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string"
          },
          "epcValue": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateRfidDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string"
          },
          "epcValue": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          }
        }
      },
      "UpdateRfidDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "epcValue": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UsedRfidAnalysisDto": {
        "type": "object",
        "description": "DTO for used RFID tag analysis - includes count and detailed RFID information",
        "additionalProperties": false,
        "properties": {
          "totalUsedCount": {
            "type": "integer",
            "description": "Total count of used RFID tags",
            "format": "int32"
          },
          "usedRfids": {
            "type": "array",
            "description": "List of used RFID tags with their details",
            "items": {
              "$ref": "#/components/schemas/UsedRfidDetailDto"
            }
          },
          "summary": {
            "type": "string",
            "description": "Analysis summary"
          }
        }
      },
      "UsedRfidDetailDto": {
        "type": "object",
        "description": "DTO for individual used RFID tag details",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string",
            "description": "RFID tag code"
          },
          "epcValue": {
            "type": "string",
            "description": "EPC value of the RFID tag"
          },
          "productId": {
            "type": "integer",
            "description": "Product ID this RFID is assigned to",
            "format": "int32"
          },
          "assignedOn": {
            "type": "string",
            "description": "When the RFID was assigned to the product",
            "format": "date-time"
          },
          "productInfo": {
            "type": "string",
            "description": "Product details (if available)",
            "nullable": true
          }
        }
      },
      "UnusedRfidAnalysisDto": {
        "type": "object",
        "description": "DTO for unused RFID tag analysis - includes count and detailed RFID information",
        "additionalProperties": false,
        "properties": {
          "totalUnusedCount": {
            "type": "integer",
            "description": "Total count of unused RFID tags",
            "format": "int32"
          },
          "unusedRfids": {
            "type": "array",
            "description": "List of unused RFID tags with their details",
            "items": {
              "$ref": "#/components/schemas/UnusedRfidDetailDto"
            }
          },
          "summary": {
            "type": "string",
            "description": "Analysis summary"
          }
        }
      },
      "UnusedRfidDetailDto": {
        "type": "object",
        "description": "DTO for individual unused RFID tag details",
        "additionalProperties": false,
        "properties": {
          "rfidCode": {
            "type": "string",
            "description": "RFID tag code"
          },
          "epcValue": {
            "type": "string",
            "description": "EPC value of the RFID tag"
          },
          "createdOn": {
            "type": "string",
            "description": "When the RFID was created",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the RFID is active"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "description": "User data transfer object for API responses",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "description": "Unique identifier for the user",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Username for login"
          },
          "email": {
            "type": "string",
            "description": "Email address (unique)"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City where the user is located",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Physical address",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "description": "Organization/company name"
          },
          "showroomType": {
            "type": "string",
            "description": "Type of showroom (e.g., Premium, Standard)",
            "nullable": true
          },
          "clientCode": {
            "type": "string",
            "description": "Unique client code (e.g., LS0001)"
          },
          "databaseName": {
            "type": "string",
            "description": "Database name for the client",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "description": "Connection string for the client database",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user is active"
          },
          "createdOn": {
            "type": "string",
            "description": "When the user was created",
            "format": "date-time"
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "description": "Data transfer object for creating a new user",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "description": "Username for login (required)"
          },
          "email": {
            "type": "string",
            "description": "Email address (required, unique)"
          },
          "password": {
            "type": "string",
            "description": "Password (required)"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City where the user is located",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Physical address",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "description": "Organization/company name (required)"
          },
          "showroomType": {
            "type": "string",
            "description": "Type of showroom (e.g., Premium, Standard)",
            "nullable": true
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "description": "Data transfer object for login response",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          },
          "user": {
            "description": "User information",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "expiresAt": {
            "type": "string",
            "description": "When the token expires",
            "format": "date-time"
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "description": "Data transfer object for user login",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address (required)"
          },
          "password": {
            "type": "string",
            "description": "Password (required)"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "description": "Data transfer object for updating user information",
        "additionalProperties": false,
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax number",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City where the user is located",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Physical address",
            "nullable": true
          },
          "organisationName": {
            "type": "string",
            "description": "Organization/company name",
            "nullable": true
          },
          "showroomType": {
            "type": "string",
            "description": "Type of showroom (e.g., Premium, Standard)",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user is active",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer"
      }
    }
  }
}