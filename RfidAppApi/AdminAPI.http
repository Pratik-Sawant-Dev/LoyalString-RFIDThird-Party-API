# RFID Jewelry Inventory System - Admin API Test Collection
# Updated with Branch and Counter Assignment for Sub-User Registration

### Variables
@baseUrl = https://localhost:7001
@adminToken = your_admin_jwt_token_here
@clientCode = LS0001

### 1. Admin Login
POST {{baseUrl}}/api/user/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "admin123"
}

### 2. Get Available Branches
GET {{baseUrl}}/api/admin/branches
Authorization: Bearer {{adminToken}}

### 3. Get Counters for a Specific Branch
GET {{baseUrl}}/api/admin/branches/1/counters
Authorization: Bearer {{adminToken}}

### 4. Register Sub-User with Branch and Counter Assignment
POST {{baseUrl}}/api/admin/register-sub-user
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "userName": "john_doe",
  "email": "john.doe@example.com",
  "password": "password123",
  "fullName": "John Doe",
  "mobileNumber": "9876543210",
  "city": "Mumbai",
  "address": "123 Main Street, Mumbai",
  "showroomType": "Premium",
  "isAdmin": false,
  "branchId": 1,
  "counterId": 1,
  "permissions": [
    {
      "module": "Product",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": false,
      "canExport": true,
      "canImport": false
    },
    {
      "module": "RFID",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": false,
      "canExport": true,
      "canImport": false
    },
    {
      "module": "Invoice",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": false,
      "canExport": true,
      "canImport": false
    }
  ]
}

### 5. Register Admin User (without branch/counter assignment)
POST {{baseUrl}}/api/admin/register-admin
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "userName": "admin_user",
  "email": "admin.user@example.com",
  "password": "password123",
  "fullName": "Admin User",
  "mobileNumber": "9876543211",
  "city": "Mumbai",
  "address": "456 Admin Street, Mumbai",
  "showroomType": "Premium",
  "isAdmin": true,
  "permissions": [
    {
      "module": "Product",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": true,
      "canExport": true,
      "canImport": true
    },
    {
      "module": "RFID",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": true,
      "canExport": true,
      "canImport": true
    },
    {
      "module": "Invoice",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": true,
      "canExport": true,
      "canImport": true
    }
  ]
}

### 6. Get Users by Location (Branch)
GET {{baseUrl}}/api/admin/users/by-location?branchId=1
Authorization: Bearer {{adminToken}}

### 7. Get Users by Location (Counter)
GET {{baseUrl}}/api/admin/users/by-location?counterId=1
Authorization: Bearer {{adminToken}}

### 8. Get All Users Under Admin (with branch/counter info)
GET {{baseUrl}}/api/admin/users-under-admin
Authorization: Bearer {{adminToken}}

### 9. Update User Branch and Counter Assignment
PUT {{baseUrl}}/api/admin/users/2
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "fullName": "John Doe Updated",
  "branchId": 2,
  "counterId": 2
}

### 10. Get User by ID (with branch/counter info)
GET {{baseUrl}}/api/admin/users/2
Authorization: Bearer {{adminToken}}

### 11. Get Organization Dashboard
GET {{baseUrl}}/api/admin/organization/dashboard
Authorization: Bearer {{adminToken}}

### 12. Get User Activities
GET {{baseUrl}}/api/admin/user-activities
Authorization: Bearer {{adminToken}}

### 13. Export User Activities to CSV
GET {{baseUrl}}/api/admin/export-activities/csv
Authorization: Bearer {{adminToken}}

### 14. Get User Hierarchy
GET {{baseUrl}}/api/admin/user-hierarchy
Authorization: Bearer {{adminToken}}

### 15. Assign Permissions to User
POST {{baseUrl}}/api/admin/assign-permissions
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "userId": 2,
  "permissions": [
    {
      "module": "Product",
      "canView": true,
      "canCreate": true,
      "canEdit": true,
      "canDelete": true,
      "canExport": true,
      "canImport": true
    }
  ]
}

### 16. Activate User
PUT {{baseUrl}}/api/admin/activate-user
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "userId": 2,
  "isActive": true,
  "remarks": "User activated successfully"
}

### 17. Deactivate User
PUT {{baseUrl}}/api/admin/deactivate-user
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "userId": 2,
  "isActive": false,
  "remarks": "User deactivated due to policy violation"
}

### 18. Reset User Password
POST {{baseUrl}}/api/admin/users/2/reset-password
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "newPassword": "newpassword123"
}

### 19. Delete User (Soft Delete)
DELETE {{baseUrl}}/api/admin/users/2
Authorization: Bearer {{adminToken}}

### 20. Get All Organization Users
GET {{baseUrl}}/api/admin/organization/users
Authorization: Bearer {{adminToken}}